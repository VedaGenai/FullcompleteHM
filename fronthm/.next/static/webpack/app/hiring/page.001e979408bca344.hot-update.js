"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/hiring/page",{

/***/ "(app-pages-browser)/./src/app/components/Jd_threshold/sidebarCreate.jsx":
/*!***********************************************************!*\
  !*** ./src/app/components/Jd_threshold/sidebarCreate.jsx ***!
  \***********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _RoleSelector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RoleSelector */ \"(app-pages-browser)/./src/app/components/Jd_threshold/RoleSelector.jsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nconst Sidebar = (param)=>{\n    let { roles, skills_data, sendRangeValue, onCreate, sendSelectedRoles, onRoleSelect, onDashboardUpdate, jobId } = param;\n    _s();\n    const [selectedRoles, setSelectedRoles] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [dashboardCount, setDashboardCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(5); // Default to 5 on scale\n    const [message, setMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [availableDashboards, setAvailableDashboards] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [selectedDashboards, setSelectedDashboards] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [samplePrompts, setSamplePrompts] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loadingSamplePrompts, setLoadingSamplePrompts] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [thresholdId, setThresholdId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // Add state for threshold ID\n    // Helper function to generate dashboard content string from skills_data\n    const generateDashboardContent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Sidebar.useCallback[generateDashboardContent]\": (skillsData, selectedRoles)=>{\n            if (!skillsData || !selectedRoles || selectedRoles.length === 0) return \"\";\n            const role = selectedRoles[0];\n            const roleData = skillsData[role];\n            if (!roleData) return \"\";\n            let content = \"\";\n            let dashboardNumber = 1;\n            for(const category in roleData){\n                content += \"Dashboard #\".concat(dashboardNumber, \" - \").concat(category, \":\\n\");\n                const items = roleData[category];\n                for(const itemName in items){\n                    const item = items[itemName];\n                    content += \"- \".concat(itemName, \": Importance: \").concat(item.importance, \"% Rating: \").concat(item.rating, \"/10\\n\");\n                }\n                content += \"\\n\";\n                dashboardNumber++;\n            }\n            return content;\n        }\n    }[\"Sidebar.useCallback[generateDashboardContent]\"], []);\n    // Function to get threshold ID from job ID\n    const getThresholdId = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Sidebar.useCallback[getThresholdId]\": async (jid)=>{\n            if (!jid) return null;\n            try {\n                const response = await fetch(\"/api/threshold-ids?job_id=\".concat(jid));\n                if (!response.ok) {\n                    console.warn(\"Failed to fetch threshold ID for job ID \".concat(jid, \": \").concat(response.status));\n                    return null;\n                }\n                const data = await response.json();\n                if (data && data.threshold_id) {\n                    console.log(\"Found threshold ID \".concat(data.threshold_id, \" for job ID \").concat(jid));\n                    return data.threshold_id;\n                } else if (data && Array.isArray(data) && data.length > 0 && data[0].threshold_id) {\n                    console.log(\"Found threshold ID \".concat(data[0].threshold_id, \" for job ID \").concat(jid));\n                    return data[0].threshold_id;\n                }\n                // If no threshold ID is found, fallback to using job ID\n                console.warn(\"No threshold ID found for job ID \".concat(jid, \", using job ID as fallback\"));\n                return parseInt(jid);\n            } catch (error) {\n                console.error(\"Error fetching threshold ID: \".concat(error));\n                return parseInt(jid); // Fallback to job ID\n            }\n        }\n    }[\"Sidebar.useCallback[getThresholdId]\"], []);\n    // Function to fetch sample prompts\n    const fetchSamplePrompts = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Sidebar.useCallback[fetchSamplePrompts]\": async ()=>{\n            if (!jobId) return;\n            try {\n                setLoadingSamplePrompts(true);\n                // Try to get the actual threshold ID first\n                const tid = thresholdId || await getThresholdId(jobId);\n                if (tid) {\n                    setThresholdId(tid);\n                }\n                // Use threshold_id for API calls\n                const threshold_id = tid || parseInt(jobId);\n                console.log(\"Fetching sample prompts for threshold ID:\", threshold_id);\n                // First try the newer POST endpoint with threshold data\n                try {\n                    // Get the current threshold data to pass to the API\n                    const thresholdData = {\n                        threshold_id: threshold_id,\n                        threshold_result: skills_data && Object.keys(skills_data).length > 0 ? {\n                            roles: roles,\n                            content: generateDashboardContent(skills_data, roles),\n                            skills_data: skills_data\n                        } : null,\n                        title: roles && roles.length > 0 ? roles[0] : \"\"\n                    };\n                    // Create AbortController for timeout\n                    const controller = new AbortController();\n                    const timeoutId = setTimeout({\n                        \"Sidebar.useCallback[fetchSamplePrompts].timeoutId\": ()=>controller.abort()\n                    }[\"Sidebar.useCallback[fetchSamplePrompts].timeoutId\"], 10000);\n                    const response = await fetch('/api/recommended-prompts', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify(thresholdData),\n                        signal: controller.signal\n                    });\n                    clearTimeout(timeoutId);\n                    if (!response.ok) {\n                        throw new Error(\"Failed to fetch sample prompts: \".concat(response.status));\n                    }\n                    const data = await response.json();\n                    // Handle the new format - array of PromptRecommendation objects\n                    if (Array.isArray(data) && data.length > 0) {\n                        // Format prompts for display in a more concise way\n                        const formattedPrompts = data.map({\n                            \"Sidebar.useCallback[fetchSamplePrompts].formattedPrompts\": (prompt, index)=>\"\".concat(index + 1, \". **\").concat(prompt.title, '**: \"').concat(prompt.prompt_text, '\"')\n                        }[\"Sidebar.useCallback[fetchSamplePrompts].formattedPrompts\"]).join('\\n\\n');\n                        setSamplePrompts(formattedPrompts);\n                        return;\n                    }\n                } catch (postError) {\n                    console.warn(\"Error using POST endpoint:\", postError);\n                // Fall back to the GET endpoint\n                }\n                // Fall back to the GET endpoint if POST fails\n                try {\n                    // Create AbortController for timeout\n                    const controller = new AbortController();\n                    const timeoutId = setTimeout({\n                        \"Sidebar.useCallback[fetchSamplePrompts].timeoutId\": ()=>controller.abort()\n                    }[\"Sidebar.useCallback[fetchSamplePrompts].timeoutId\"], 8000);\n                    const getResponse = await fetch(\"/api/recommended-prompts/\".concat(threshold_id), {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        signal: controller.signal\n                    });\n                    clearTimeout(timeoutId);\n                    if (!getResponse.ok) {\n                        throw new Error(\"Failed to fetch sample prompts with GET: \".concat(getResponse.status));\n                    }\n                    const getData = await getResponse.json();\n                    // Handle the new format - array of PromptRecommendation objects\n                    if (Array.isArray(getData) && getData.length > 0) {\n                        // Format prompts for display in a more concise way\n                        const formattedPrompts = getData.map({\n                            \"Sidebar.useCallback[fetchSamplePrompts].formattedPrompts\": (prompt, index)=>\"\".concat(index + 1, \". **\").concat(prompt.title, '**: \"').concat(prompt.prompt_text, '\"')\n                        }[\"Sidebar.useCallback[fetchSamplePrompts].formattedPrompts\"]).join('\\n\\n');\n                        setSamplePrompts(formattedPrompts);\n                    } else {\n                        setSamplePrompts(\"No sample prompts available.\");\n                    }\n                } catch (getError) {\n                    console.error(\"Error fetching sample prompts with GET:\", getError);\n                    setSamplePrompts(\"Error loading sample prompts. Please try again.\");\n                }\n            } catch (error) {\n                console.error(\"Error fetching sample prompts:\", error);\n                setSamplePrompts(\"Error loading sample prompts. Please try again.\");\n            } finally{\n                setLoadingSamplePrompts(false);\n            }\n        }\n    }[\"Sidebar.useCallback[fetchSamplePrompts]\"], [\n        jobId,\n        roles,\n        skills_data,\n        generateDashboardContent,\n        setSamplePrompts,\n        setLoadingSamplePrompts,\n        thresholdId,\n        getThresholdId\n    ]);\n    // Function to extract prompt text from the sample prompt\n    const extractPromptText = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Sidebar.useCallback[extractPromptText]\": (fullPromptText)=>{\n            // Look for text within quotes\n            const quoteMatch = fullPromptText.match(/\"([^\"]+)\"/);\n            if (quoteMatch && quoteMatch[1]) {\n                return quoteMatch[1];\n            }\n            // Fall back to the text after the colon if no quotes are found\n            const colonMatch = fullPromptText.match(/:\\s*(.+)/);\n            if (colonMatch && colonMatch[1]) {\n                return colonMatch[1].trim();\n            }\n            return fullPromptText;\n        }\n    }[\"Sidebar.useCallback[extractPromptText]\"], []);\n    // Function to handle click on a sample prompt\n    const handleSamplePromptClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Sidebar.useCallback[handleSamplePromptClick]\": (promptText)=>{\n            const extractedPrompt = extractPromptText(promptText);\n            setMessage(extractedPrompt);\n        }\n    }[\"Sidebar.useCallback[handleSamplePromptClick]\"], [\n        extractPromptText,\n        setMessage\n    ]);\n    // Debug jobId prop and fetch prompts when needed\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Sidebar.useEffect\": ()=>{\n            console.log(\"Sidebar received jobId:\", jobId, \"typeof jobId:\", typeof jobId);\n            // Fetch threshold ID when jobId changes\n            if (jobId) {\n                getThresholdId(jobId).then({\n                    \"Sidebar.useEffect\": (tid)=>{\n                        if (tid) {\n                            setThresholdId(tid);\n                            console.log(\"Set threshold ID to \".concat(tid, \" for job ID \").concat(jobId));\n                        }\n                    }\n                }[\"Sidebar.useEffect\"]);\n            }\n            // Fetch sample prompts when jobId changes and we have the required data\n            if (jobId && roles && roles.length > 0 && skills_data && Object.keys(skills_data).length > 0) {\n                console.log(\"Fetching sample prompts with complete data\");\n                fetchSamplePrompts();\n            } else if (jobId) {\n                console.log(\"Will fetch sample prompts with just jobId (fallback method)\");\n                fetchSamplePrompts();\n            }\n        }\n    }[\"Sidebar.useEffect\"], [\n        jobId,\n        roles,\n        skills_data,\n        fetchSamplePrompts,\n        getThresholdId\n    ]);\n    // Extract available dashboard categories from skills_data\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Sidebar.useEffect\": ()=>{\n            if (skills_data && Object.keys(skills_data).length > 0) {\n                // Get the first role key\n                const roleKey = Object.keys(skills_data)[0];\n                if (roleKey && skills_data[roleKey]) {\n                    // Extract categories (skills, achievements, activities, etc.)\n                    const categories = Object.keys(skills_data[roleKey]);\n                    console.log(\"Available dashboard categories:\", categories);\n                    setAvailableDashboards(categories);\n                    // Set initial selected dashboards\n                    const initialSelected = categories.slice(0, dashboardCount);\n                    setSelectedDashboards(initialSelected);\n                }\n            }\n        }\n    }[\"Sidebar.useEffect\"], [\n        skills_data\n    ]);\n    // Auto-select the first role when component loads\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Sidebar.useEffect\": ()=>{\n            console.log(\"Roles received in sidebar:\", roles);\n            if (roles && roles.length > 0) {\n                // Auto-select the first role\n                const initialRoles = [\n                    roles[0]\n                ];\n                setSelectedRoles(initialRoles);\n                // Notify parent components about the auto-selection\n                if (sendSelectedRoles) sendSelectedRoles(initialRoles);\n                if (onRoleSelect) onRoleSelect(initialRoles);\n            }\n        }\n    }[\"Sidebar.useEffect\"], [\n        roles\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Sidebar.useEffect\": ()=>{\n            if (selectedRoles.length > 0) {\n                sendSelectedRoles(selectedRoles);\n            }\n        }\n    }[\"Sidebar.useEffect\"], [\n        selectedRoles,\n        sendSelectedRoles\n    ]);\n    // Update dashboard selections when count changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Sidebar.useEffect\": ()=>{\n            if (availableDashboards.length > 0) {\n                // Limit selections to dashboard count\n                let newSelection = [\n                    ...selectedDashboards\n                ];\n                // If we have more than allowed, trim\n                if (newSelection.length > dashboardCount) {\n                    newSelection = newSelection.slice(0, dashboardCount);\n                }\n                // If we have fewer than allowed, add more\n                while(newSelection.length < dashboardCount && newSelection.length < availableDashboards.length){\n                    const nextOption = availableDashboards.find({\n                        \"Sidebar.useEffect.nextOption\": (opt)=>!newSelection.includes(opt)\n                    }[\"Sidebar.useEffect.nextOption\"]);\n                    if (nextOption) {\n                        newSelection.push(nextOption);\n                    } else {\n                        break;\n                    }\n                }\n                setSelectedDashboards(newSelection);\n            }\n        }\n    }[\"Sidebar.useEffect\"], [\n        dashboardCount,\n        availableDashboards\n    ]);\n    const handleDashboardCountChange = (e)=>{\n        const count = parseInt(e.target.value);\n        setDashboardCount(count);\n        sendRangeValue(count);\n    };\n    const handleRoleChange = (role)=>{\n        const updatedRoles = selectedRoles.includes(role) ? selectedRoles.filter((r)=>r !== role) : [\n            ...selectedRoles,\n            role\n        ];\n        setSelectedRoles(updatedRoles);\n        onRoleSelect(updatedRoles);\n    };\n    const handleDashboardSelection = (dashboard)=>{\n        if (selectedDashboards.includes(dashboard)) {\n            // Only remove if we'll still have at least one dashboard\n            if (selectedDashboards.length > 1) {\n                setSelectedDashboards(selectedDashboards.filter((d)=>d !== dashboard));\n            }\n        } else if (selectedDashboards.length < dashboardCount) {\n            setSelectedDashboards([\n                ...selectedDashboards,\n                dashboard\n            ]);\n        } else {\n            // Replace the last one\n            const newSelection = [\n                ...selectedDashboards\n            ];\n            newSelection.pop();\n            newSelection.push(dashboard);\n            setSelectedDashboards(newSelection);\n        }\n    };\n    const handleRunPrompt = async (prompt)=>{\n        try {\n            setIsLoading(true);\n            setError(null);\n            console.log(\"Running prompt:\", prompt);\n            const promptText = typeof prompt === 'string' ? prompt : String(prompt || \"\");\n            // Get current threshold ID from the jobId\n            const tid = thresholdId || await getThresholdId(jobId);\n            if (!tid && !jobId) {\n                throw new Error(\"No threshold ID or job ID available\");\n            }\n            const threshold_id = tid || parseInt(jobId);\n            console.log(\"Using threshold ID \".concat(threshold_id, \" for prompt processing\"));\n            // Call the process-prompt API to modify the dashboard\n            try {\n                console.log(\"Calling process-prompt API...\");\n                const processResponse = await fetch('/api/process-prompt', {\n                    method: 'PUT',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        prompt: promptText,\n                        threshold_id: threshold_id,\n                        job_id: jobId\n                    })\n                });\n                // Get the response content type\n                const contentType = processResponse.headers.get('content-type');\n                let errorMessage = '';\n                if (!processResponse.ok) {\n                    // Try to parse error response as JSON first\n                    if (contentType && contentType.includes('application/json')) {\n                        try {\n                            const errorData = await processResponse.json();\n                            errorMessage = errorData.detail || errorData.message || \"Server error: \".concat(processResponse.status);\n                        } catch (jsonError) {\n                            console.warn(\"Failed to parse error response as JSON:\", jsonError);\n                            const errorText = await processResponse.text();\n                            errorMessage = \"Server error: \".concat(processResponse.status, \" - \").concat(errorText);\n                        }\n                    } else {\n                        // If not JSON, get text response\n                        const errorText = await processResponse.text();\n                        errorMessage = \"Server error: \".concat(processResponse.status, \" - \").concat(errorText);\n                    }\n                    console.error(\"API Error Response:\", {\n                        status: processResponse.status,\n                        statusText: processResponse.statusText,\n                        error: errorMessage\n                    });\n                    throw new Error(errorMessage);\n                }\n                // Parse successful response\n                let processData;\n                try {\n                    processData = await processResponse.json();\n                    console.log(\"Process prompt response:\", processData);\n                } catch (parseError) {\n                    console.error(\"Failed to parse response as JSON:\", parseError);\n                    throw new Error(\"Invalid response format from server\");\n                }\n                if (processData && processData.modified_dashboards) {\n                    // Update the UI with the changes\n                    if (onDashboardUpdate) {\n                        onDashboardUpdate(processData.modified_dashboards.skills_data);\n                    }\n                    // Show success message with changes\n                    if (processData.changes && processData.changes.length > 0) {\n                        setMessage(\"Successfully applied changes:\\n\".concat(processData.changes.join('\\n')));\n                    } else {\n                        setMessage(\"Successfully updated dashboard\");\n                    }\n                    // Refresh sample prompts after successful update\n                    fetchSamplePrompts();\n                } else {\n                    console.error(\"Invalid response format:\", processData);\n                    throw new Error(\"No modified dashboard data received\");\n                }\n            } catch (processError) {\n                console.error(\"Error processing prompt:\", processError);\n                // Set a more user-friendly error message\n                setError(processError.message || \"Failed to process prompt. Please try again.\");\n                throw processError;\n            }\n            setIsLoading(false);\n        } catch (error) {\n            console.error(\"Error in handleRunPrompt:\", error);\n            setError(error.message || \"An unexpected error occurred\");\n            setIsLoading(false);\n        }\n    };\n    const manuallyApplyChanges = (currentSkillsData, promptText)=>{\n        // Ensure currentSkillsData is an object, not an array\n        let skillsDataObj = currentSkillsData;\n        if (Array.isArray(currentSkillsData)) {\n            console.log(\"Input skills_data is an array with length:\", currentSkillsData.length);\n            if (currentSkillsData.length > 0) {\n                skillsDataObj = currentSkillsData[0];\n            } else {\n                console.warn(\"Empty skills_data array provided, using empty object\");\n                skillsDataObj = {};\n            }\n        }\n        // Deep clone the current skills data to avoid mutating the original\n        const updatedSkillsData = JSON.parse(JSON.stringify(skillsDataObj));\n        // Parse the prompt text to extract changes\n        const lines = promptText.split('\\n');\n        for (const line of lines){\n            if (!line.trim()) continue;\n            // Extract skill name and values\n            let skillName = '';\n            let newValue = 0;\n            let isRating = false;\n            // Check for different patterns\n            if (line.includes(\"selection score\") || line.includes(\"rejection score\")) {\n                // Extract skill name - it's between the start and \"'s\"\n                const match = line.match(/(?:Set|Adjust)\\s+(.*?)'s/);\n                if (match && match[1]) {\n                    skillName = match[1];\n                }\n                // Extract new value - it's after \"to\" and before \"%\"\n                const valueMatch = line.match(/to\\s+(\\d+\\.\\d+)%/);\n                if (valueMatch && valueMatch[1]) {\n                    newValue = parseFloat(valueMatch[1]);\n                }\n                isRating = false; // This is an importance value\n            } else if (line.includes(\"rating\")) {\n                // Extract skill name\n                const match = line.match(/Update\\s+(.*?)'s/);\n                if (match && match[1]) {\n                    skillName = match[1];\n                }\n                // Extract new value\n                const valueMatch = line.match(/to\\s+(\\d+\\.\\d+)/);\n                if (valueMatch && valueMatch[1]) {\n                    newValue = parseFloat(valueMatch[1]);\n                }\n                isRating = true; // This is a rating value\n            } else if (line.includes(\"importance\")) {\n                // Extract skill name\n                const match = line.match(/Change\\s+(.*?)'s/);\n                if (match && match[1]) {\n                    skillName = match[1];\n                }\n                // Extract new value\n                const valueMatch = line.match(/to\\s+(\\d+\\.\\d+)%/);\n                if (valueMatch && valueMatch[1]) {\n                    newValue = parseFloat(valueMatch[1]);\n                }\n                isRating = false; // This is an importance value\n            }\n            // If we found a skill name and a new value, update the skills data\n            if (skillName && newValue) {\n                console.log(\"Updating \".concat(skillName, \" with new \").concat(isRating ? 'rating' : 'importance', \" value: \").concat(newValue));\n                // Find the skill in the skills data\n                const roleKeys = Object.keys(updatedSkillsData);\n                if (roleKeys.length === 0) {\n                    console.warn(\"No role keys found in skills data\");\n                    continue;\n                }\n                const roleKey = roleKeys[0]; // Assuming there's only one role\n                if (!roleKey) continue;\n                const roleData = updatedSkillsData[roleKey];\n                if (!roleData) {\n                    console.warn(\"No data found for role \".concat(roleKey));\n                    continue;\n                }\n                let found = false;\n                // Check in skills, achievements, and activities\n                for (const category of Object.keys(roleData)){\n                    if (roleData[category] && roleData[category][skillName]) {\n                        // Found the skill, update the value\n                        if (isRating) {\n                            roleData[category][skillName].rating = newValue;\n                        } else {\n                            roleData[category][skillName].importance = newValue;\n                        }\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    console.warn(\"Could not find skill: \".concat(skillName, \" in the skills data\"));\n                }\n            }\n        }\n        // Ensure we return an object, not an array\n        console.log(\"Final updated skills_data type:\", typeof updatedSkillsData);\n        return updatedSkillsData;\n    };\n    // Parse sample prompts to make them clickable\n    const renderClickableSamplePrompts = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Sidebar.useCallback[renderClickableSamplePrompts]\": ()=>{\n            if (!samplePrompts) return null;\n            // Ensure samplePrompts is a string\n            const promptsText = typeof samplePrompts === 'string' ? samplePrompts : String(samplePrompts || '');\n            // Match numbered items with titles, descriptions, and quotes\n            const sections = promptsText.split(/\\d+\\.\\s*\\*\\*/).filter(Boolean);\n            // If we couldn't split it properly, just show the raw content\n            if (sections.length <= 1) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"p-2 bg-gray-100 rounded text-xs whitespace-pre-line\",\n                    dangerouslySetInnerHTML: {\n                        __html: promptsText.replace(/\\n/g, '<br>')\n                    }\n                }, void 0, false, {\n                    fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                    lineNumber: 579,\n                    columnNumber: 17\n                }, undefined);\n            }\n            // Map each section to a clickable prompt\n            return sections.map({\n                \"Sidebar.useCallback[renderClickableSamplePrompts]\": (section, index)=>{\n                    // Find the title\n                    const titleMatch = section.match(/([^:*]+):/);\n                    const title = titleMatch ? titleMatch[1].trim() : \"Sample \".concat(index + 1);\n                    // Find the text in quotes\n                    const quoteMatch = section.match(/\"([^\"]+)\"/);\n                    let promptText = quoteMatch ? quoteMatch[1] : section;\n                    // Truncate the prompt text if it's too long (>80 chars)\n                    const originalText = promptText;\n                    if (promptText.length > 80) {\n                        promptText = promptText.substring(0, 80) + \"...\";\n                    }\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"p-2 bg-gray-100 rounded cursor-pointer hover:bg-gray-200 text-xs transition-colors mb-1\",\n                        onClick: {\n                            \"Sidebar.useCallback[renderClickableSamplePrompts]\": ()=>handleSamplePromptClick(originalText)\n                        }[\"Sidebar.useCallback[renderClickableSamplePrompts]\"],\n                        title: originalText,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"font-semibold text-blue-600\",\n                                children: title\n                            }, void 0, false, {\n                                fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                lineNumber: 609,\n                                columnNumber: 21\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-gray-800 mt-1 italic bg-white p-1 rounded border border-gray-300 text-xs\",\n                                children: [\n                                    '\"',\n                                    promptText,\n                                    '\"'\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                lineNumber: 610,\n                                columnNumber: 21\n                            }, undefined)\n                        ]\n                    }, \"prompt-section-\".concat(index), true, {\n                        fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                        lineNumber: 603,\n                        columnNumber: 17\n                    }, undefined);\n                }\n            }[\"Sidebar.useCallback[renderClickableSamplePrompts]\"]);\n        }\n    }[\"Sidebar.useCallback[renderClickableSamplePrompts]\"], [\n        samplePrompts,\n        handleSamplePromptClick\n    ]);\n    const handleCreate = async ()=>{\n        if (selectedRoles.length > 0) {\n            console.log(\"Creating dashboard with roles:\", selectedRoles);\n            console.log(\"Selected dashboards:\", selectedDashboards);\n            console.log(\"Number of dashboards:\", dashboardCount);\n            try {\n                setIsLoading(true);\n                setError(null);\n                // Filter skills_data to only include selected dashboards\n                const filteredSkillsData = {};\n                // For each role\n                Object.keys(skills_data).forEach((roleKey)=>{\n                    filteredSkillsData[roleKey] = {};\n                    // Only include selected dashboard categories\n                    selectedDashboards.forEach((category)=>{\n                        if (skills_data[roleKey][category]) {\n                            filteredSkillsData[roleKey][category] = skills_data[roleKey][category];\n                        }\n                    });\n                });\n                // Pass filtered data with dashboard count\n                sendSelectedRoles(selectedRoles);\n                sendRangeValue(dashboardCount);\n                // Use the jobId provided as prop instead of trying to extract from URL\n                console.log(\"jobId in handleCreate:\", jobId, \"typeof:\", typeof jobId);\n                // Get a valid numeric job ID, with good fallbacks\n                let currentJobId = 1; // Default fallback\n                if (jobId !== undefined && jobId !== null) {\n                    if (typeof jobId === 'number') {\n                        currentJobId = jobId;\n                    } else if (typeof jobId === 'string' && jobId.trim() !== '') {\n                        // Try to parse as integer if it's a string\n                        const parsed = parseInt(jobId);\n                        if (!isNaN(parsed)) {\n                            currentJobId = parsed;\n                        }\n                    }\n                }\n                console.log(\"Final currentJobId value:\", currentJobId, \"type:\", typeof currentJobId);\n                // Call the create_dashboards endpoint with the job_id and dashboard count\n                const response = await fetch(\"http://127.0.0.1:8000/api/update_dashboards/?job_id=\".concat(currentJobId, \"&num_dashboards=\").concat(dashboardCount), {\n                    method: 'PUT',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                });\n                console.log(\"Response status:\", response.status);\n                console.log(\"Response headers:\", Object.fromEntries([\n                    ...response.headers\n                ]));\n                // Check for empty response\n                const responseText = await response.text();\n                console.log(\"Raw response:\", responseText);\n                let responseData = {};\n                if (responseText) {\n                    try {\n                        responseData = JSON.parse(responseText);\n                    } catch (parseError) {\n                        console.error(\"Error parsing response:\", parseError);\n                        setError(\"Error parsing API response: \".concat(responseText.substring(0, 100), \"...\"));\n                    }\n                }\n                if (!response.ok) {\n                    const statusText = response.statusText || \"\";\n                    let errorMessage = \"API Error (\".concat(response.status, \"): \").concat(statusText);\n                    // Handle different error types\n                    if (response.status === 422) {\n                        console.error(\"Validation Error Details:\", responseData);\n                        // Format validation errors (typical FastAPI format)\n                        if (responseData.detail && Array.isArray(responseData.detail)) {\n                            const validationErrors = responseData.detail.map((err)=>\"\".concat(err.loc.join('.'), \" - \").concat(err.msg)).join('; ');\n                            errorMessage += \" - Validation errors: \".concat(validationErrors);\n                        } else if (typeof responseData.detail === 'object') {\n                            errorMessage += \" - \".concat(JSON.stringify(responseData.detail));\n                        } else if (responseData.detail) {\n                            errorMessage += \" - \".concat(responseData.detail);\n                        }\n                    } else {\n                        // For other errors\n                        if (responseData.detail) {\n                            errorMessage += \" - \".concat(typeof responseData.detail === 'object' ? JSON.stringify(responseData.detail) : responseData.detail);\n                        }\n                    }\n                    console.error(errorMessage);\n                    throw new Error(errorMessage);\n                }\n                console.log(\"Dashboard created successfully:\", responseData);\n                // Pass the response data to the parent component\n                if (onCreate) {\n                    onCreate({\n                        roles: responseData.roles || selectedRoles,\n                        skills_data: responseData.skills_data || filteredSkillsData,\n                        num_dashboards: dashboardCount,\n                        ...responseData\n                    });\n                }\n                setMessage(\"Created dashboard for selected roles\");\n                setIsLoading(false);\n            } catch (error) {\n                console.error(\"Error creating dashboard:\", error);\n                setError(\"Error creating dashboard: \".concat(error.message));\n                setIsLoading(false);\n            }\n        }\n    };\n    // Add a button click handler for the refresh button to explicitly fetch prompts\n    const handleRefreshPrompts = async ()=>{\n        if (!jobId) {\n            console.error(\"Cannot fetch prompts: No job ID available\");\n            return;\n        }\n        console.log(\"Manually refreshing prompts for job ID:\", jobId);\n        await fetchSamplePrompts();\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"p-4 bg-white rounded-lg shadow-md\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-6 border rounded-lg p-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                        htmlFor: \"promptInput\",\n                        className: \"block text-sm font-medium text-gray-700 mb-2\",\n                        children: \"Enter Prompt\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                        lineNumber: 760,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                        id: \"promptInput\",\n                        className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\",\n                        placeholder: \"Enter your prompt here...\",\n                        rows: 3,\n                        value: message,\n                        onChange: (e)=>setMessage(e.target.value)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                        lineNumber: 763,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>handleRunPrompt(message),\n                        className: \"mt-3 w-full py-2 px-4 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors disabled:bg-gray-400\",\n                        disabled: !message.trim() || isLoading,\n                        children: isLoading ? \"Processing...\" : \"Submit Prompt\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                        lineNumber: 771,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex justify-between items-center mb-2\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-sm font-medium text-gray-700\",\n                                        children: \"Sample Prompts:\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                        lineNumber: 781,\n                                        columnNumber: 25\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: handleRefreshPrompts,\n                                        className: \"text-xs flex items-center text-blue-600 hover:text-blue-800\",\n                                        disabled: loadingSamplePrompts,\n                                        children: loadingSamplePrompts ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"flex items-center\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                    className: \"animate-spin -ml-1 mr-2 h-4 w-4 text-blue-600\",\n                                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                                    fill: \"none\",\n                                                    viewBox: \"0 0 24 24\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                                            className: \"opacity-25\",\n                                                            cx: \"12\",\n                                                            cy: \"12\",\n                                                            r: \"10\",\n                                                            stroke: \"currentColor\",\n                                                            strokeWidth: \"4\"\n                                                        }, void 0, false, {\n                                                            fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                                            lineNumber: 790,\n                                                            columnNumber: 41\n                                                        }, undefined),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                            className: \"opacity-75\",\n                                                            fill: \"currentColor\",\n                                                            d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                                                        }, void 0, false, {\n                                                            fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                                            lineNumber: 791,\n                                                            columnNumber: 41\n                                                        }, undefined)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                                    lineNumber: 789,\n                                                    columnNumber: 37\n                                                }, undefined),\n                                                \"Refreshing...\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                            lineNumber: 788,\n                                            columnNumber: 33\n                                        }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                    className: \"w-4 h-4 mr-1\",\n                                                    fill: \"none\",\n                                                    stroke: \"currentColor\",\n                                                    viewBox: \"0 0 24 24\",\n                                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                        strokeLinecap: \"round\",\n                                                        strokeLinejoin: \"round\",\n                                                        strokeWidth: \"2\",\n                                                        d: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                                                    }, void 0, false, {\n                                                        fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                                        lineNumber: 798,\n                                                        columnNumber: 41\n                                                    }, undefined)\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                                    lineNumber: 797,\n                                                    columnNumber: 37\n                                                }, undefined),\n                                                \"Refresh\"\n                                            ]\n                                        }, void 0, true)\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                        lineNumber: 782,\n                                        columnNumber: 25\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                lineNumber: 780,\n                                columnNumber: 21\n                            }, undefined),\n                            loadingSamplePrompts ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-center py-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"inline-block animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-blue-500\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                        lineNumber: 808,\n                                        columnNumber: 29\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"mt-2 text-gray-600 text-sm\",\n                                        children: \"Loading sample prompts...\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                        lineNumber: 809,\n                                        columnNumber: 29\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                lineNumber: 807,\n                                columnNumber: 25\n                            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"grid grid-cols-1 gap-2\",\n                                children: samplePrompts ? renderClickableSamplePrompts() : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"p-2 bg-gray-100 rounded cursor-pointer hover:bg-gray-200 text-sm transition-colors\",\n                                            onClick: ()=>setMessage(\"Set JavaScript's selection score to 85.5%\"),\n                                            children: \"Set JavaScript's selection score to 85.5%\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                            lineNumber: 817,\n                                            columnNumber: 37\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"p-2 bg-gray-100 rounded cursor-pointer hover:bg-gray-200 text-sm transition-colors\",\n                                            onClick: ()=>setMessage(\"Update React's rating to 4.5\"),\n                                            children: \"Update React's rating to 4.5\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                            lineNumber: 823,\n                                            columnNumber: 37\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"p-2 bg-gray-100 rounded cursor-pointer hover:bg-gray-200 text-sm transition-colors\",\n                                            onClick: ()=>setMessage(\"Change TypeScript's importance to 90.0%\"),\n                                            children: \"Change TypeScript's importance to 90.0%\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                            lineNumber: 829,\n                                            columnNumber: 37\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"p-2 bg-gray-100 rounded cursor-pointer hover:bg-gray-200 text-sm transition-colors\",\n                                            onClick: ()=>setMessage(\"Adjust Node.js's rejection score to 25.0%\"),\n                                            children: \"Adjust Node.js's rejection score to 25.0%\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                            lineNumber: 835,\n                                            columnNumber: 37\n                                        }, undefined)\n                                    ]\n                                }, void 0, true)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                                lineNumber: 812,\n                                columnNumber: 25\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                        lineNumber: 779,\n                        columnNumber: 17\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                lineNumber: 759,\n                columnNumber: 13\n            }, undefined),\n            message && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4 p-3 bg-green-100 text-green-700 rounded-md\",\n                children: message\n            }, void 0, false, {\n                fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                lineNumber: 849,\n                columnNumber: 17\n            }, undefined),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4 p-3 bg-red-100 text-red-700 rounded-md\",\n                children: error\n            }, void 0, false, {\n                fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n                lineNumber: 855,\n                columnNumber: 17\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\projects\\\\CompleteHM\\\\completeHM\\\\fronthm\\\\src\\\\app\\\\components\\\\Jd_threshold\\\\sidebarCreate.jsx\",\n        lineNumber: 758,\n        columnNumber: 9\n    }, undefined);\n};\n_s(Sidebar, \"jqJmWz8inz9IUfqMGs8whfZCvmE=\");\n_c = Sidebar;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Sidebar);\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/Jd_threshold/sidebarCreate.jsx\n"));

/***/ })

});